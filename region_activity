[{"id":"776cada2606cca5d","type":"tab","label":"Flow 1","disabled":false,"info":""},{"id":"0c06dd9fb5c17728","type":"http in","z":"776cada2606cca5d","name":"Tracks active ","url":"/region/active","method":"post","upload":false,"swaggerDoc":"","x":290,"y":140,"wires":[["cc95c534fe851e3d","e246e6fbdc967a6f"]]},{"id":"cc95c534fe851e3d","type":"http response","z":"776cada2606cca5d","name":"","statusCode":"200","headers":{},"x":620,"y":80,"wires":[]},{"id":"e246e6fbdc967a6f","type":"function","z":"776cada2606cca5d","name":"Add track to activeRegions ","func":"// Retrieve the global 'activeRegions' object, or initialize it if it doesn't exist\nlet activeRegions = global.get(\"activeRegions\") || {};\n\n// Extract 'trackid' and 'region' from the incoming message payload\nlet trackid = msg.payload.trackid;\nlet region = msg.payload.region;\n\n// Get the current timestamp\nlet currentTimestamp = Math.floor(Date.now() / 1000); // Unix timestamp in seconds\n\n// Ensure the 'region' key exists in the 'activeRegions' object\nif (!activeRegions[region]) {\n    activeRegions[region] = {}; // Initialize with an empty object if it doesn't exist\n}\n\n// Update the 'trackid' with the current timestamp\nactiveRegions[region][trackid] = currentTimestamp;\n\n// Update the global object with the modified 'activeRegions'\nglobal.set(\"activeRegions\", activeRegions);\n\n// Output the updated object to the next node\nmsg.payload = activeRegions;\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":680,"y":160,"wires":[["7946ba2c704c91b8"]]},{"id":"669d1ab9c35fdd6f","type":"http in","z":"776cada2606cca5d","name":"","url":"/analytic","method":"post","upload":false,"swaggerDoc":"","x":290,"y":460,"wires":[["bbed1cd94f6c2c45","acc54d57ad722833","f6409deb7971229e"]]},{"id":"bbed1cd94f6c2c45","type":"http response","z":"776cada2606cca5d","name":"","statusCode":"200","headers":{},"x":630,"y":440,"wires":[]},{"id":"acc54d57ad722833","type":"function","z":"776cada2606cca5d","name":"Check if regon is active","func":"// Retrieve the global 'activeRegions' object, or initialize it if it doesn't exist\nlet activeRegions = global.get(\"activeRegions\") || {};\n\n// Extract 'display_name' from the incoming message payload\nlet displayName = msg.payload.display_name;\n\n\n// Check if the 'display_name' exists as a key in 'activeRegions'\nif (activeRegions.hasOwnProperty(displayName)) {\n    return msg;\n}\n\nreturn;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":670,"y":520,"wires":[["2c1123dd05eff10d"]]},{"id":"27f1f343d7259d20","type":"http in","z":"776cada2606cca5d","name":"Tracks inactive","url":"/region/inactive","method":"post","upload":false,"swaggerDoc":"","x":300,"y":280,"wires":[["46147d453a6de61b","dffd521e6dbf5d24"]]},{"id":"46147d453a6de61b","type":"http response","z":"776cada2606cca5d","name":"","statusCode":"200","headers":{},"x":620,"y":220,"wires":[]},{"id":"dffd521e6dbf5d24","type":"function","z":"776cada2606cca5d","name":"Remove track to activeRegions ","func":"// Retrieve the global 'activeRegions' object, or initialize it if it doesn't exist\nlet activeRegions = global.get(\"activeRegions\") || {};\n\n// Extract 'trackid' and 'region' from the incoming message payload\nlet trackid = msg.payload.trackid;\nlet region = msg.payload.region;\n\n// Check if the 'region' exists in 'activeRegions'\nif (activeRegions[region]) {\n    // Check if the 'trackid' exists in the 'region' object\n    if (activeRegions[region][trackid]) {\n        // Remove the 'trackid' from the 'region'\n        delete activeRegions[region][trackid];\n        \n        // If the 'region' object is now empty, remove the 'region' itself\n        if (Object.keys(activeRegions[region]).length === 0) {\n            delete activeRegions[region];\n        }\n    }\n}\n\n// Update the global object with the modified 'activeRegions'\nglobal.set(\"activeRegions\", activeRegions);\n\n// Output the updated object to the next node\nmsg.payload = activeRegions;\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":690,"y":300,"wires":[["6965027cdd4637a2"]]},{"id":"94d212ddac9a17fa","type":"inject","z":"776cada2606cca5d","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":280,"y":720,"wires":[["82599410919688d3"]]},{"id":"82599410919688d3","type":"function","z":"776cada2606cca5d","name":"function 3","func":"let activeRegion = global.get('activeRegions') || [];\n\nmsg.payload = activeRegion;\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":480,"y":720,"wires":[["8fdb01a7224fc3bf"]]},{"id":"8fdb01a7224fc3bf","type":"debug","z":"776cada2606cca5d","name":"debug 9","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":700,"y":720,"wires":[]},{"id":"a57dfe18acdee313","type":"catch","z":"776cada2606cca5d","name":"","scope":null,"uncaught":false,"x":280,"y":620,"wires":[["7812c5b7d9bf6593"]]},{"id":"7812c5b7d9bf6593","type":"debug","z":"776cada2606cca5d","name":"debug 11","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":540,"y":620,"wires":[]},{"id":"577a4ea428c2968d","type":"function","z":"776cada2606cca5d","name":"Remove old tracks","func":"// Retrieve the global 'activeRegions' object, or initialize it if it doesn't exist\nlet activeRegions = global.get(\"activeRegions\") || {};\n\n// Get the current timestamp\nlet currentTimestamp = Math.floor(Date.now() / 1000); // Unix timestamp in seconds\n\n// Define the time threshold (2 minutes in seconds)\nconst timeThreshold = 2 * 60; // 2 minutes in seconds\n\n// Iterate through each 'region' in 'activeRegions'\nfor (let region in activeRegions) {\n    if (activeRegions.hasOwnProperty(region)) {\n        // Iterate through each 'trackid' in the current 'region'\n        for (let trackid in activeRegions[region]) {\n            if (activeRegions[region].hasOwnProperty(trackid)) {\n                // Check if the timestamp is older than the threshold\n                if (currentTimestamp - activeRegions[region][trackid] > timeThreshold) {\n                    // Remove the 'trackid' if it is older than 2 minutes\n                    delete activeRegions[region][trackid];\n                }\n            }\n        }\n        \n        // If the 'regioin' object is now empty, remove the 'region' itself\n        if (Object.keys(activeRegions[region]).length === 0) {\n            delete activeRegions[region];\n        }\n    }\n}\n\n// Update the global object with the modified 'activeRegions'\nglobal.set(\"activeRegions\", activeRegions);\n\n// Output the updated object to the next node\nmsg.payload = activeRegions;\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":650,"y":380,"wires":[[]]},{"id":"419676939fe71b02","type":"inject","z":"776cada2606cca5d","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"60","crontab":"","once":true,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":330,"y":380,"wires":[["577a4ea428c2968d"]]},{"id":"2c1123dd05eff10d","type":"http request","z":"776cada2606cca5d","name":"Push to ACS","method":"GET","ret":"txt","paytoqs":"ignore","url":"https://192.168.1.211:29204/Acs/Api/TriggerFacade/ActivateDeactivateTrigger?{\"triggerName\":\"CoreCommand\",\"deactivateAfterSeconds\":\"5\"}","tls":"eda33190f0680082","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"basic","senderr":false,"headers":[],"x":990,"y":520,"wires":[[]]},{"id":"f6409deb7971229e","type":"debug","z":"776cada2606cca5d","name":"debug 12","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":860,"y":460,"wires":[]},{"id":"7946ba2c704c91b8","type":"debug","z":"776cada2606cca5d","name":"debug 13","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":920,"y":160,"wires":[]},{"id":"6965027cdd4637a2","type":"debug","z":"776cada2606cca5d","name":"debug 14","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":960,"y":300,"wires":[]},{"id":"eda33190f0680082","type":"tls-config","name":"Accept_self_signed","cert":"","key":"","ca":"","certname":"","keyname":"","caname":"","servername":"","verifyservercert":false,"alpnprotocol":""}]

